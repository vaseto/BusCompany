/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guiLayer;

import ctrlLayer.CardInfoCtrl;
import ctrlLayer.PersonCtrl;
import ctrlLayer.ReservationCtrl;
import ctrlLayer.TicketCtrl;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import modelLayer.Person;
import modelLayer.Reservation;
import modelLayer.Route;
import modelLayer.Ticket;

/**
 *
 * @author Delyan
 */
public class CustomerProfile extends javax.swing.JFrame {

    private LogIn in;
    private static CustomerProfile instance;
    private ReservationCtrl reservationCtrl = new ReservationCtrl();
    private DefaultTableModel model, model1;

    /**
     * Singleton pattern for creating CustomerProfile object
     *
     * @return the instance of the CustomerProfile
     */
    public static CustomerProfile getInstance() {
        if (instance == null) {
            instance = new CustomerProfile();
        }
        return instance;
    }

    private CustomerProfile() {
        initComponents();
        addListners();
        tablePanel.setVisible(false);
        model1 = (DefaultTableModel) jTable1.getModel();
        model = (DefaultTableModel) jTable2.getModel();
    }

    public JTextField getCCVField() {
        return CCVField;
    }

    public JTextField getBankNameField() {
        return bankNameField;
    }

    public JLabel getBankNameLabel() {
        return bankNameLabel;
    }

    public JTextField getCardNumberField() {
        return cardNumberField;
    }

    public JLabel getCardNumberLabel() {
        return cardNumberLabel;
    }

    public JLabel getCcvLabel() {
        return ccvLabel;
    }

    public JLabel getjLabel8() {
        return jLabel8;
    }

    public JTextField getExpDateField() {
        return expDateField;
    }

    public JLabel getExpireDateLabel() {
        return expireDateLabel;
    }

    public void setLogIn(LogIn in) {
        this.in = in;
    }

    public JPanel getInformationPanel() {
        return informationPanel;
    }

    public JPanel getPersonMenu() {
        return personMenu;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        informationPanel = new javax.swing.JPanel();
        CardPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cardNumberLabel = new javax.swing.JLabel();
        bankNameLabel = new javax.swing.JLabel();
        cardNumberField = new javax.swing.JTextField();
        bankNameField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ccvLabel = new javax.swing.JLabel();
        CCVField = new javax.swing.JTextField();
        expireDateLabel = new javax.swing.JLabel();
        expDateField = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        tablePanel = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        personMenu = new javax.swing.JPanel();
        bookingsButton = new javax.swing.JButton();
        rentsButton = new javax.swing.JButton();
        personalInfoButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        informationPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setText("Card Information :");

        cardNumberLabel.setText("Card number:");

        bankNameLabel.setText("Bank name :");

        jLabel8.setText("<html> Note : \n<BR>The date have to be writen in the pattern of MM-YY</BR>\n<BR>Example : 10 - 18</BR></html>");

        ccvLabel.setText("CCV:");

        expireDateLabel.setText("Expire date:");

        jButton4.setText("Add credit card");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CardPanelLayout = new javax.swing.GroupLayout(CardPanel);
        CardPanel.setLayout(CardPanelLayout);
        CardPanelLayout.setHorizontalGroup(
            CardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CardPanelLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(CardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(CardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cardNumberLabel)
                        .addComponent(bankNameLabel)
                        .addComponent(cardNumberField)
                        .addComponent(bankNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CardPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(CardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CardPanelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(CardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ccvLabel)
                                    .addComponent(CCVField, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(expireDateLabel)
                                    .addComponent(expDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CardPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)))))
                .addContainerGap())
        );
        CardPanelLayout.setVerticalGroup(
            CardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ccvLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cardNumberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cardNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CCVField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bankNameLabel)
                    .addComponent(expireDateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bankNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(CardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CardPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel8)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CardPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(26, 26, 26))))
        );

        jButton5.setText("Cancel reservation");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Change reservation details");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addGap(867, 867, 867)
                .addComponent(jButton5)
                .addGap(18, 18, 18)
                .addComponent(jButton6))
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addGap(298, 298, 298)
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5)
                    .addComponent(jButton6)))
        );

        jLabel2.setText("<html>Here you can see all your booking for future travels, rents and your pesonal information. You may make changes over them or even\ncancel them.</html>");

        jTextField1.setEditable(false);

        javax.swing.GroupLayout informationPanelLayout = new javax.swing.GroupLayout(informationPanel);
        informationPanel.setLayout(informationPanelLayout);
        informationPanelLayout.setHorizontalGroup(
            informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 1254, Short.MAX_VALUE))
            .addGroup(informationPanelLayout.createSequentialGroup()
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informationPanelLayout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(CardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(informationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(214, Short.MAX_VALUE))
        );
        informationPanelLayout.setVerticalGroup(
            informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(CardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        personMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bookingsButton.setText("Bookings");
        bookingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingsButtonActionPerformed(evt);
            }
        });

        rentsButton.setText("Rents");
        rentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentsButtonActionPerformed(evt);
            }
        });

        personalInfoButton.setText("Information");
        personalInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personalInfoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout personMenuLayout = new javax.swing.GroupLayout(personMenu);
        personMenu.setLayout(personMenuLayout);
        personMenuLayout.setHorizontalGroup(
            personMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bookingsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rentsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(personalInfoButton, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
        );
        personMenuLayout.setVerticalGroup(
            personMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personMenuLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(bookingsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(rentsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(personalInfoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        personMenuLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {bookingsButton, personalInfoButton, rentsButton});

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "From", "To", "Price", "Km", "Departure time", "Arrival time", "Date", "Seat number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setColumnSelectionAllowed(true);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable2);
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "From", "To", "Bus", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(personMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(informationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(338, 338, 338)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(358, 358, 358)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(304, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 294, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(personMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(informationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * clears and repainting then making the fields non editable if the person
     * owns a credit card
     *
     * @param evt the event that triggered this button
     */
    private void personalInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personalInfoButtonActionPerformed
        clear();
        jTextField1.setVisible(false);
        if (in.getP().getCardInfo() != null) {
            CCVField.setEditable(false);
            cardNumberField.setEditable(false);
            expDateField.setEditable(false);
            bankNameField.setEditable(false);
        }
        CardPanel.setVisible(true);
        informationPanel.add(CardPanel);
        informationPanel.add(in.getRegisterPanel2());
        informationPanel.repaint();
        in.add(informationPanel);
        in.repaint();
    }//GEN-LAST:event_personalInfoButtonActionPerformed
    /**
     * Fills the table which holds all reservation the currently logged person
     * has
     */
    private void fillTableForReservation() {
        model1.setRowCount(0);
         Person p = in.getP();
         if(p.getReservations() ==null){
            p.setReservations(reservationCtrl.getAllReservationsForPerson(p));
         }
        for (Reservation reservation : in.getP().getReservations()) {
            if (!reservation.getTo().after(new Date())) {
                model1.addRow(new Object[]{reservation.getFrom() + "", reservation.getTo() + "", reservation.getBus().getId(), reservation.getPrice()});
            }
        }
        jTextField1.setVisible(true);
        jTextField1.setText("From                                        | To                                                   | Bus number                                | Price ");
    }

    /**
     * Fills the table which holds all the tickets the currently person has
     *
     */
    private void fillTableForTickets() {
        model.setRowCount(0);
        Person p = in.getP();
        if(p.getTickets()==null){
            try {
                TicketCtrl ticketCtrl = new TicketCtrl();
                p.setTickets(ticketCtrl.getAllTicketsForPerson(p.getId()));
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null,"Could not load tickets");
            }
        }
        for (Ticket ticket : p.getTickets()) {
            Route route = ticket.getRoute();
            model.addRow(new Object[]{route.getFrom().getCity(),route.getTo().getCity(),ticket.getPrice(),route.getKm(),ticket.getTime().getDepartureTime(),
                ticket.getTime().getArrivalTime(),ticket.getDate(),ticket.getSeat().getNumber()});
            }
        jTextField1.setVisible(true);
        jTextField1.setText("From           |  To                      |   Price                |                 Km | Departure time|    Arrival time   | Date                 | Seat number");
        
        }
    

    /**
     * Clears the information panel of all components without name
     */
    private void clear() {
        for (Component comp : informationPanel.getComponents()) {
            if (comp instanceof JPanel) {
                if (comp.getName() == null) {
                    informationPanel.remove(comp);
                }
            }
        }
    }
    
    private void resetInformationPanel(JTable tableAdd,JTable tabbleRemove){
        clear();
        informationPanel.remove(in.getRegisterPanel2());
        informationPanel.repaint();
        tablePanel.remove(tabbleRemove);
        tablePanel.add(tableAdd,BorderLayout.CENTER);
        tablePanel.setVisible(true);
        informationPanel.add(tablePanel);
        in.add(personMenu);
        in.add(informationPanel);
        in.repaint();
    }

    /**
     * Opens the rent menu and showing the person all rents
     *
     * @param evt the event which triggered this button
     */
    private void rentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentsButtonActionPerformed
        resetInformationPanel(jTable1,jTable2);
        jLabel1.setText("Your current rentings");
        fillTableForReservation();
    }//GEN-LAST:event_rentsButtonActionPerformed
    /**
     * add KeyEvent listeners to all text fields in the cardpanel
     */
    private void addListners() {
        for (Component field : CardPanel.getComponents()) {
            if (field instanceof JTextField) {
                field.addKeyListener(new KeyAdapter() {
                    public void keyPressed(java.awt.event.KeyEvent evt) {
                        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                            jButton4.doClick();
                        }
                    }

                });
            }
        }
    }

    /**
     * Remove the current credit card of the currently logged person by finding
     * it by its number Making the fields editable and clear the old text
     *
     * @return 1 if the operation is successful 0 otherwise
     */
    private int removeCard() {
        int index = 0;
        CardInfoCtrl cardCtrl = new CardInfoCtrl();
        try {
            PersonCtrl personCtr = new PersonCtrl();
            index = personCtr.removeCreditCard(in.getP(), cardCtrl.getCardByNumber((cardNumberField.getText())));
            cardNumberField.setText("");
            cardNumberField.setEditable(true);
            CCVField.setText("");
            CCVField.setEditable(true);
            bankNameField.setText("");
            bankNameField.setEditable(true);
            expDateField.setText("");
            expDateField.setEditable(true);
            CardPanel.repaint();
            in.repaint();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Could not remove the credit card");
        }
        return index;
    }

    /**
     * Gets the text from the expDatefield and parse it to util Date
     *
     * @return java.util.Date
     * @throws ParseException if the field has wrong pattern
     */
    private Date parseDateField() throws ParseException {
        DateFormat format = new SimpleDateFormat("MM, d, yyyy");
        String str[] = expDateField.getText().split("-");
        return format.parse(str[0] + ", 1, " + "20" + str[1]);
    }

    /**
     *
     * @param date the String to be parsed to Date
     * @return java.util.Date
     * @throws ParseException if the parsing cannot be completed
     */
    private Date makeDate(String date) throws ParseException {
        DateFormat format = new SimpleDateFormat("MM, d, yyyy");
        String str[] = date.split("-");
        return format.parse(str[1] + ", " + str[2] + ", " + str[0]);
    }

    /**
     * Removes and adds new credit card to the customer or one of the operations
     *
     * @param evt
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int i;
        if (in.getP().getCardInfo() == null) {
            if (checkCardLabels()) {
                newCard();
            }
        } else {
            i = JOptionPane.showConfirmDialog(null, "<html>You are about to create a new credit card. By the rules of the company each customer can hold only one credit card.<BR> If you decide to press YES"
                    + " you current credit card will be removed and you will have to create new one</html>");
            if (i == 0) {
                if (removeCard() > 0) {
                    JOptionPane.showMessageDialog(null, "Card removed succesfuly. Now you can create new one");
                }
            }

        }
    }//GEN-LAST:event_jButton4ActionPerformed
    /**
     * Show the all the bookings a person has
     *
     * @param evt
     */
    private void bookingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingsButtonActionPerformed
     resetInformationPanel(jTable2,jTable1);
     jLabel1.setText("Your current bookings");
     fillTableForTickets();
    }//GEN-LAST:event_bookingsButtonActionPerformed
    /**
     * Canceling a rent that a person has
     *
     * @param evt
     */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            int selected = jTable1.getSelectedRow();
            int cancel = JOptionPane.showConfirmDialog(null, "Are you sure you want to cancel your reservation ? ");
            if (cancel == 0) {
                if (reservationCtrl.deleteReservation((int) model1.getValueAt(selected, 0)) > 0) {
                    model1.removeRow(selected);
                    JOptionPane.showMessageDialog(null, "Reservation successfully removed");
                }
            }
        } catch (ArrayIndexOutOfBoundsException ar) {
            JOptionPane.showMessageDialog(null, "No reservation has been selected");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Could not cancel the reservation");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        /**
         * int selected = jTable1.getSelectedRow(); int cancel =
         * JOptionPane.showConfirmDialog(null,"Are you sure you want to change
         * your reservation ? "); if(cancel == 0){ Reservation reservation =
         * reservationCtrl.getReservation((int) jTable1.getValueAt(selected,
         * 0)); try {
         * reservationCtrl.changeFromDate(reservation,makeDate((String)
         * jTable1.getValueAt(selected, 1)));
         * reservationCtrl.changeToDate(reservation, makeDate((String)
         * jTable1.getValueAt(selected, 2)));
         * System.out.println(reservation.getFrom().toString());
         * System.out.println(reservation.getTo().toString());
         * if(reservationCtrl.updateReservation(reservation) >0){
         * JOptionPane.showMessageDialog(null, "Changes done succesful"); } }
         * catch (ParseException ex) { JOptionPane.showMessageDialog(null, "You
         * have provided a wrong format"); } catch (SQLException ex) {
         * Logger.getLogger(CustomerProfile.class.getName()).log(Level.SEVERE,
         * null, ex); } }
         *
         */
    }//GEN-LAST:event_jButton6ActionPerformed
    /**
     * Creates and assign a new credit card to the logged person
     */
    private void newCard() {
        PersonCtrl personCtrl = new PersonCtrl();
        try {
            if (personCtrl.assignNewCreditCard(in.getP(), bankNameField.getText(), parseDateField(), cardNumberField.getText(), Integer.parseInt(CCVField.getText())) == 1) {
                JOptionPane.showMessageDialog(null, "Operation succesful");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "CANNOT SQL THAT");
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "CANNOT PARSE THAT");
        }
    }

    /**
     * Check the labels color in all labels in CardPanel
     *
     * @return boolean whether all labels are in green
     */
    private boolean checkCardLabels() {
        for (Component comp : CardPanel.getComponents()) {
            if (comp instanceof JLabel) {
                if (!((JLabel) comp).getForeground().equals(Color.green)) {
                    if (((JLabel) comp).getText().contains("Card Information") || ((JLabel) comp).getText().contains("Note")) {
                        continue;
                    }
                    JOptionPane.showMessageDialog(null, "In order to register your credit card all labels have to be in green");
                    return false;
                }
            }
        }
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerProfile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CCVField;
    private javax.swing.JPanel CardPanel;
    private javax.swing.JTextField bankNameField;
    private javax.swing.JLabel bankNameLabel;
    private javax.swing.JButton bookingsButton;
    private javax.swing.JTextField cardNumberField;
    private javax.swing.JLabel cardNumberLabel;
    private javax.swing.JLabel ccvLabel;
    private javax.swing.JTextField expDateField;
    private javax.swing.JLabel expireDateLabel;
    private javax.swing.JPanel informationPanel;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel personMenu;
    private javax.swing.JButton personalInfoButton;
    private javax.swing.JButton rentsButton;
    private javax.swing.JPanel tablePanel;
    // End of variables declaration//GEN-END:variables
}
